// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetalBid.Api.Data;

#nullable disable

namespace PetalBid.Api.Migrations
{
	[DbContext(typeof(AppDbContext))]
	partial class AppDbContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Auction", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<int>("AuctioneerId")
						.HasColumnType("INTEGER");

					b.Property<int>("ClockLocation")
						.HasColumnType("INTEGER");

					b.Property<string>("Description")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<int>("Quantity")
						.HasColumnType("INTEGER");

					b.Property<int>("ReservePrice")
						.HasColumnType("INTEGER");

					b.Property<DateTime>("StartsAt")
						.HasColumnType("TEXT");

					b.HasKey("Id");

					b.HasIndex("AuctioneerId");

					b.ToTable("Auctions");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Auctioneer", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<int>("UserId")
						.HasColumnType("INTEGER");

					b.HasKey("Id");

					b.HasIndex("UserId");

					b.ToTable("Auctioneers");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Buyer", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<string>("CompanyName")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<int>("UserId")
						.HasColumnType("INTEGER");

					b.HasKey("Id");

					b.HasIndex("UserId");

					b.ToTable("Buyers");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Product", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<int>("AuctionId")
						.HasColumnType("INTEGER");

					b.Property<string>("ImageUrl")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<double?>("PotSize")
						.HasColumnType("REAL");

					b.Property<string>("Species")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<double?>("StemLength")
						.HasColumnType("REAL");

					b.Property<int>("Stock")
						.HasColumnType("INTEGER");

					b.Property<double>("Weight")
						.HasColumnType("REAL");

					b.HasKey("Id");

					b.HasIndex("AuctionId");

					b.ToTable("Products");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Sale", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<int>("AuctionId")
						.HasColumnType("INTEGER");

					b.Property<int>("BuyerId")
						.HasColumnType("INTEGER");

					b.Property<DateTime>("OccurredAt")
						.HasColumnType("TEXT");

					b.Property<string>("PaymentReference")
						.IsRequired()
						.HasColumnType("TEXT");

					b.HasKey("Id");

					b.HasIndex("AuctionId");

					b.HasIndex("BuyerId");

					b.ToTable("Sales");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.SaleItem", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<int>("ProductId")
						.HasColumnType("INTEGER");

					b.Property<int>("Quantity")
						.HasColumnType("INTEGER");

					b.Property<int>("SaleId")
						.HasColumnType("INTEGER");

					b.Property<int>("UnitPrice")
						.HasColumnType("INTEGER");

					b.HasKey("Id");

					b.HasIndex("ProductId");

					b.HasIndex("SaleId");

					b.ToTable("SaleItems");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Supplier", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<string>("CompanyName")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<int>("UserId")
						.HasColumnType("INTEGER");

					b.HasKey("Id");

					b.HasIndex("UserId");

					b.ToTable("Suppliers");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.User", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER");

					b.Property<string>("Email")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<string>("FullName")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<string>("PasswordHash")
						.IsRequired()
						.HasColumnType("TEXT");

					b.Property<int>("Role")
						.HasColumnType("INTEGER");

					b.HasKey("Id");

					b.ToTable("Users");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Auction", b =>
				{
					b.HasOne("PetalBid.Api.Domain.Entities.Auctioneer", "Auctioneer")
						.WithMany()
						.HasForeignKey("AuctioneerId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("Auctioneer");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Auctioneer", b =>
				{
					b.HasOne("PetalBid.Api.Domain.Entities.User", "User")
						.WithMany()
						.HasForeignKey("UserId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("User");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Buyer", b =>
				{
					b.HasOne("PetalBid.Api.Domain.Entities.User", "User")
						.WithMany()
						.HasForeignKey("UserId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("User");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Product", b =>
				{
					b.HasOne("PetalBid.Api.Domain.Entities.Auction", "Auction")
						.WithMany()
						.HasForeignKey("AuctionId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("Auction");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Sale", b =>
				{
					b.HasOne("PetalBid.Api.Domain.Entities.Auction", "Auction")
						.WithMany()
						.HasForeignKey("AuctionId")
						.OnDelete(DeleteBehavior.Restrict)
						.IsRequired();

					b.HasOne("PetalBid.Api.Domain.Entities.Buyer", "Buyer")
						.WithMany()
						.HasForeignKey("BuyerId")
						.OnDelete(DeleteBehavior.Restrict)
						.IsRequired();

					b.Navigation("Auction");

					b.Navigation("Buyer");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.SaleItem", b =>
				{
					b.HasOne("PetalBid.Api.Domain.Entities.Product", "Product")
						.WithMany()
						.HasForeignKey("ProductId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.HasOne("PetalBid.Api.Domain.Entities.Sale", "Sale")
						.WithMany()
						.HasForeignKey("SaleId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("Product");

					b.Navigation("Sale");
				});

			modelBuilder.Entity("PetalBid.Api.Domain.Entities.Supplier", b =>
				{
					b.HasOne("PetalBid.Api.Domain.Entities.User", "User")
						.WithMany()
						.HasForeignKey("UserId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("User");
				});
#pragma warning restore 612, 618
		}
	}
}
